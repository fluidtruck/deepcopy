name: ci

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    outputs:
      comment-id: ${{ steps.setup.outputs.comment-id }}
    steps:
      - uses: daspn/private-actions-checkout@v2
        id: actions
        with:
          actions_list: '["fluidtruck/github-actions-golang@v1"]'
          app_id: ${{ secrets.PRIVATE_ACTIONS_APP_ID }}
          app_private_key: ${{ secrets.PRIVATE_ACTIONS_KEY }}
          return_app_token: true

      - uses: ./.github/actions/github-actions-golang/actions/setup
        id: setup
        with:
          app-token: ${{ steps.actions.outputs.app-token }}

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [setup]
    steps:
      - uses: actions/checkout@v3

      - uses: daspn/private-actions-checkout@v2
        id: actions
        with:
          actions_list: '["fluidtruck/github-actions-golang@v1"]'
          app_id: ${{ secrets.PRIVATE_ACTIONS_APP_ID }}
          app_private_key: ${{ secrets.PRIVATE_ACTIONS_KEY }}

      - uses: ./.github/actions/github-actions-golang/actions/lint
        with:
          github-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          go-version: 1.19

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [lint]
    outputs:
      coverage: ${{ steps.test.outputs.coverage }}
    steps:
      - uses: actions/checkout@v3

      - uses: daspn/private-actions-checkout@v2
        id: actions
        with:
          actions_list: '["fluidtruck/github-actions-golang@v1"]'
          app_id: ${{ secrets.PRIVATE_ACTIONS_APP_ID }}
          app_private_key: ${{ secrets.PRIVATE_ACTIONS_KEY }}

      - uses: ./.github/actions/github-actions-golang/actions/test
        id: test
        with:
          github-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          go-version: 1.19

  preview:
    runs-on: ubuntu-latest
    permissions: {}
    if: ${{ always() }}%
    needs: [setup, test]
    steps:
      - uses: daspn/private-actions-checkout@v2
        id: actions
        with:
          actions_list: '["fluidtruck/github-actions-golang@v1"]'
          app_id: ${{ secrets.PRIVATE_ACTIONS_APP_ID }}
          app_private_key: ${{ secrets.PRIVATE_ACTIONS_KEY }}
          return_app_token: true

      - uses: ./.github/actions/github-actions-golang/actions/preview
        with:
          app-token: ${{ steps.actions.outputs.app-token }}
          comment-id: ${{ needs.setup.outputs.comment-id }}
          coverage: ${{ needs.test.outputs.coverage }}
          status: ${{ needs.deploy.result }}
