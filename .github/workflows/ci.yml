name: ci

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

env:
  GOLANG_VERSION: '1.19'

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      issues: write
      pull-requests: write
    outputs:
      comment-id: ${{ steps.setup.outputs.comment-id }}
    steps:
      - uses: fluidtruck-platform/github-actions/setup@v2
        id: setup
        with:
          app-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [setup]
    steps:
      - uses: actions/checkout@v3

      - uses: fluidtruck-platform/github-actions/lint@v2
        with:
          github-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          golang-version: ${{ env.GOLANG_VERSION }}

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    needs: [setup, lint]
    outputs:
      coverage: ${{ steps.test.outputs.coverage }}
    steps:
      - uses: actions/checkout@v3

      - uses: fluidtruck-platform/github-actions/test@v2
        id: test
        with:
          github-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          golang-version: ${{ env.GOLANG_VERSION }}

      - uses: fluidtruck-platform/github-actions/preview@v2
        with:
          app-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          comment-id: ${{ needs.setup.outputs.comment-id }}
          coverage: ${{ steps.test.outputs.coverage }}

  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    if: ${{ always() }}%
    needs: [setup, test]
    steps:
      - uses: fluidtruck-platform/github-actions/preview@v2
        with:
          app-token: ${{ secrets.DEVBOT_GITHUB_TOKEN }}
          comment-id: ${{ needs.setup.outputs.comment-id }}
          coverage: ${{ needs.test.outputs.coverage }}
          status: ${{ needs.test.result }}
